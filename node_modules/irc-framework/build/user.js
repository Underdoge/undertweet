'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

module.exports = function () {
    function User(opts) {
        _classCallCheck(this, User);

        opts = opts || {};

        this.nick = opts.nick || '';
        this.username = opts.username || '';
        this.gecos = opts.gecos || '';
        this.host = opts.host || '';
        this.away = !!opts.away;

        this.modes = new Set(opts.modes || []);
    }

    _createClass(User, [{
        key: 'toggleModes',
        value: function toggleModes(modestr) {
            var adding = true;
            var i;

            for (i in modestr) {
                switch (modestr[i]) {
                    case '+':
                        adding = true;
                        break;
                    case '-':
                        adding = false;
                        break;
                    default:
                        this.modes[adding ? 'add' : 'delete'](modestr[i]);
                }
            }
        }
    }]);

    return User;
}();